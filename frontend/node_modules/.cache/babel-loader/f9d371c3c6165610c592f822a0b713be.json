{"ast":null,"code":"import { ruRU as ruRUCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst ruRUGrid = {\n  // Root\n  noRowsLabel: 'Нет строк',\n  noResultsOverlayLabel: 'Данные не найдены.',\n  errorOverlayDefaultLabel: 'Обнаружена ошибка.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Высота строки',\n  toolbarDensityLabel: 'Высота строки',\n  toolbarDensityCompact: 'Компактная',\n  toolbarDensityStandard: 'Стандартная',\n  toolbarDensityComfortable: 'Комфортная',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Столбцы',\n  toolbarColumnsLabel: 'Выделите столбцы',\n  // Filters toolbar button text\n  toolbarFilters: 'Фильтры',\n  toolbarFiltersLabel: 'Показать фильтры',\n  toolbarFiltersTooltipHide: 'Скрыть фильтры',\n  toolbarFiltersTooltipShow: 'Показать фильтры',\n  toolbarFiltersTooltipActive: count => {\n    let pluralForm = 'активных фильтров';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'активных фильтра';\n    } else if (lastDigit === 1) {\n      pluralForm = 'активный фильтр';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Export selector toolbar button text\n  toolbarExport: 'Экспорт',\n  toolbarExportLabel: 'Экспорт',\n  toolbarExportCSV: 'Скачать в формате CSV',\n  toolbarExportPrint: 'Печать',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Найти столбец',\n  columnsPanelTextFieldPlaceholder: 'Заголовок столбца',\n  columnsPanelDragIconLabel: 'Изменить порядок столбца',\n  columnsPanelShowAllButton: 'Показать все',\n  columnsPanelHideAllButton: 'Скрыть все',\n  // Filter panel text\n  filterPanelAddFilter: 'Добавить фильтр',\n  filterPanelDeleteIconLabel: 'Удалить',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Операторы',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'И',\n  filterPanelOperatorOr: 'Или',\n  filterPanelColumns: 'Столбцы',\n  filterPanelInputLabel: 'Значение',\n  filterPanelInputPlaceholder: 'Значение фильтра',\n  // Filter operators text\n  filterOperatorContains: 'содержит',\n  filterOperatorEquals: 'равен',\n  filterOperatorStartsWith: 'начинается с',\n  filterOperatorEndsWith: 'заканчивается на',\n  filterOperatorIs: 'равен',\n  filterOperatorNot: 'не равен',\n  filterOperatorAfter: 'больше чем',\n  filterOperatorOnOrAfter: 'больше или равно',\n  filterOperatorBefore: 'меньше чем',\n  filterOperatorOnOrBefore: 'меньше или равно',\n  filterOperatorIsEmpty: 'пустой',\n  filterOperatorIsNotEmpty: 'не пустой',\n  // filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'любой',\n  filterValueTrue: 'истина',\n  filterValueFalse: 'ложь',\n  // Column menu text\n  columnMenuLabel: 'Меню',\n  columnMenuShowColumns: 'Показать столбцы',\n  columnMenuFilter: 'Фильтр',\n  columnMenuHideColumn: 'Скрыть',\n  columnMenuUnsort: 'Отменить сортировку',\n  columnMenuSortAsc: 'Сортировать по возрастанию',\n  columnMenuSortDesc: 'Сортировать по убыванию',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => {\n    let pluralForm = 'активных фильтров';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'активных фильтра';\n    } else if (lastDigit === 1) {\n      pluralForm = 'активный фильтр';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  columnHeaderFiltersLabel: 'Показать фильтры',\n  columnHeaderSortIconLabel: 'Сортировать',\n  // Rows selected footer text\n  footerRowSelected: count => {\n    let pluralForm = 'строк выбрано';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'строки выбраны';\n    } else if (lastDigit === 1) {\n      pluralForm = 'строка выбрана';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Total row amount footer text\n  footerTotalRows: 'Всего строк:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} из ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Выбор флажка',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'истина',\n  booleanCellFalseLabel: 'ложь',\n  // Actions cell more text\n  actionsCellMore: 'ещё',\n  // Column pinning text\n  pinToLeft: 'Закрепить слева',\n  pinToRight: 'Закрепить справа',\n  unpin: 'Открепить',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Группа',\n  treeDataExpand: 'показать дочерние элементы',\n  treeDataCollapse: 'скрыть дочерние элементы',\n  // Grouping columns\n  groupingColumnHeaderName: 'Группа',\n  groupColumn: name => `Сгруппировать по ${name}`,\n  unGroupColumn: name => `Разгруппировать по ${name}` // Master/detail\n  // expandDetailPanel: 'Expand',\n  // collapseDetailPanel: 'Collapse',\n\n};\nexport const ruRU = getGridLocalization(ruRUGrid, ruRUCore);","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/locales/ruRU.js"],"names":["ruRU","ruRUCore","getGridLocalization","ruRUGrid","noRowsLabel","noResultsOverlayLabel","errorOverlayDefaultLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","pluralForm","lastDigit","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","columnsPanelTextFieldLabel","columnsPanelTextFieldPlaceholder","columnsPanelDragIconLabel","columnsPanelShowAllButton","columnsPanelHideAllButton","filterPanelAddFilter","filterPanelDeleteIconLabel","filterPanelOperators","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorEquals","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","toLocaleString","checkboxSelectionHeaderName","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","name","unGroupColumn"],"mappings":"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","sourcesContent":["import { ruRU as ruRUCore } from '@mui/material/locale';\nimport { getGridLocalization } from '../utils/getGridLocalization';\nconst ruRUGrid = {\n  // Root\n  noRowsLabel: 'Нет строк',\n  noResultsOverlayLabel: 'Данные не найдены.',\n  errorOverlayDefaultLabel: 'Обнаружена ошибка.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Высота строки',\n  toolbarDensityLabel: 'Высота строки',\n  toolbarDensityCompact: 'Компактная',\n  toolbarDensityStandard: 'Стандартная',\n  toolbarDensityComfortable: 'Комфортная',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Столбцы',\n  toolbarColumnsLabel: 'Выделите столбцы',\n  // Filters toolbar button text\n  toolbarFilters: 'Фильтры',\n  toolbarFiltersLabel: 'Показать фильтры',\n  toolbarFiltersTooltipHide: 'Скрыть фильтры',\n  toolbarFiltersTooltipShow: 'Показать фильтры',\n  toolbarFiltersTooltipActive: count => {\n    let pluralForm = 'активных фильтров';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'активных фильтра';\n    } else if (lastDigit === 1) {\n      pluralForm = 'активный фильтр';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Export selector toolbar button text\n  toolbarExport: 'Экспорт',\n  toolbarExportLabel: 'Экспорт',\n  toolbarExportCSV: 'Скачать в формате CSV',\n  toolbarExportPrint: 'Печать',\n  // Columns panel text\n  columnsPanelTextFieldLabel: 'Найти столбец',\n  columnsPanelTextFieldPlaceholder: 'Заголовок столбца',\n  columnsPanelDragIconLabel: 'Изменить порядок столбца',\n  columnsPanelShowAllButton: 'Показать все',\n  columnsPanelHideAllButton: 'Скрыть все',\n  // Filter panel text\n  filterPanelAddFilter: 'Добавить фильтр',\n  filterPanelDeleteIconLabel: 'Удалить',\n  // filterPanelLinkOperator: 'Logic operator',\n  filterPanelOperators: 'Операторы',\n  // TODO v6: rename to filterPanelOperator\n  filterPanelOperatorAnd: 'И',\n  filterPanelOperatorOr: 'Или',\n  filterPanelColumns: 'Столбцы',\n  filterPanelInputLabel: 'Значение',\n  filterPanelInputPlaceholder: 'Значение фильтра',\n  // Filter operators text\n  filterOperatorContains: 'содержит',\n  filterOperatorEquals: 'равен',\n  filterOperatorStartsWith: 'начинается с',\n  filterOperatorEndsWith: 'заканчивается на',\n  filterOperatorIs: 'равен',\n  filterOperatorNot: 'не равен',\n  filterOperatorAfter: 'больше чем',\n  filterOperatorOnOrAfter: 'больше или равно',\n  filterOperatorBefore: 'меньше чем',\n  filterOperatorOnOrBefore: 'меньше или равно',\n  filterOperatorIsEmpty: 'пустой',\n  filterOperatorIsNotEmpty: 'не пустой',\n  // filterOperatorIsAnyOf: 'is any of',\n  // Filter values text\n  filterValueAny: 'любой',\n  filterValueTrue: 'истина',\n  filterValueFalse: 'ложь',\n  // Column menu text\n  columnMenuLabel: 'Меню',\n  columnMenuShowColumns: 'Показать столбцы',\n  columnMenuFilter: 'Фильтр',\n  columnMenuHideColumn: 'Скрыть',\n  columnMenuUnsort: 'Отменить сортировку',\n  columnMenuSortAsc: 'Сортировать по возрастанию',\n  columnMenuSortDesc: 'Сортировать по убыванию',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => {\n    let pluralForm = 'активных фильтров';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'активных фильтра';\n    } else if (lastDigit === 1) {\n      pluralForm = 'активный фильтр';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  columnHeaderFiltersLabel: 'Показать фильтры',\n  columnHeaderSortIconLabel: 'Сортировать',\n  // Rows selected footer text\n  footerRowSelected: count => {\n    let pluralForm = 'строк выбрано';\n    const lastDigit = count % 10;\n\n    if (lastDigit > 1 && lastDigit < 5) {\n      pluralForm = 'строки выбраны';\n    } else if (lastDigit === 1) {\n      pluralForm = 'строка выбрана';\n    }\n\n    return `${count} ${pluralForm}`;\n  },\n  // Total row amount footer text\n  footerTotalRows: 'Всего строк:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} из ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Выбор флажка',\n  // checkboxSelectionSelectAllRows: 'Select all rows',\n  // checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  // checkboxSelectionSelectRow: 'Select row',\n  // checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'истина',\n  booleanCellFalseLabel: 'ложь',\n  // Actions cell more text\n  actionsCellMore: 'ещё',\n  // Column pinning text\n  pinToLeft: 'Закрепить слева',\n  pinToRight: 'Закрепить справа',\n  unpin: 'Открепить',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Группа',\n  treeDataExpand: 'показать дочерние элементы',\n  treeDataCollapse: 'скрыть дочерние элементы',\n  // Grouping columns\n  groupingColumnHeaderName: 'Группа',\n  groupColumn: name => `Сгруппировать по ${name}`,\n  unGroupColumn: name => `Разгруппировать по ${name}` // Master/detail\n  // expandDetailPanel: 'Expand',\n  // collapseDetailPanel: 'Collapse',\n\n};\nexport const ruRU = getGridLocalization(ruRUGrid, ruRUCore);"]},"metadata":{},"sourceType":"module"}