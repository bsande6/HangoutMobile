{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { GridEvents } from '../../models/events';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent(GridEvents.viewportInnerSizeChange, handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: headerHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const showNoRowsOverlay = !rootProps.loading && totalRowCount === 0;\n  const showNoResultsOverlay = !rootProps.loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (rootProps.loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/components/base/GridOverlays.js"],"names":["_extends","React","unstable_useEnhancedEffect","useEnhancedEffect","useGridSelector","gridVisibleRowCountSelector","gridRowCountSelector","useGridApiContext","useGridRootProps","gridDensityHeaderHeightSelector","GridEvents","jsx","_jsx","GridOverlayWrapper","props","_viewportInnerSize$he","_viewportInnerSize$wi","apiRef","rootProps","headerHeight","viewportInnerSize","setViewportInnerSize","useState","_apiRef$current$getRo","_apiRef$current$getRo2","current","getRootDimensions","handleViewportSizeChange","useCallback","_apiRef$current$getRo3","_apiRef$current$getRo4","subscribeEvent","viewportInnerSizeChange","height","autoHeight","style","width","position","top","bottom","undefined","GridOverlays","totalRowCount","visibleRowCount","showNoRowsOverlay","loading","showNoResultsOverlay","overlay","_rootProps$components","components","NoRowsOverlay","componentsProps","noRowsOverlay","_rootProps$components2","NoResultsOverlay","noResultsOverlay","_rootProps$components3","LoadingOverlay","loadingOverlay","children"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridVisibleRowCountSelector } from '../../hooks/features/filter/gridFilterSelector';\nimport { gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { GridEvents } from '../../models/events';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridOverlayWrapper(props) {\n  var _viewportInnerSize$he, _viewportInnerSize$wi;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [viewportInnerSize, setViewportInnerSize] = React.useState(() => {\n    var _apiRef$current$getRo, _apiRef$current$getRo2;\n\n    return (_apiRef$current$getRo = (_apiRef$current$getRo2 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo2.viewportInnerSize) != null ? _apiRef$current$getRo : null;\n  });\n  const handleViewportSizeChange = React.useCallback(() => {\n    var _apiRef$current$getRo3, _apiRef$current$getRo4;\n\n    setViewportInnerSize((_apiRef$current$getRo3 = (_apiRef$current$getRo4 = apiRef.current.getRootDimensions()) == null ? void 0 : _apiRef$current$getRo4.viewportInnerSize) != null ? _apiRef$current$getRo3 : null);\n  }, [apiRef]);\n  useEnhancedEffect(() => {\n    return apiRef.current.subscribeEvent(GridEvents.viewportInnerSizeChange, handleViewportSizeChange);\n  }, [apiRef, handleViewportSizeChange]);\n  let height = (_viewportInnerSize$he = viewportInnerSize == null ? void 0 : viewportInnerSize.height) != null ? _viewportInnerSize$he : 0;\n\n  if (rootProps.autoHeight && height === 0) {\n    height = 'auto';\n  }\n\n  if (!viewportInnerSize) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    style: {\n      height,\n      width: (_viewportInnerSize$wi = viewportInnerSize == null ? void 0 : viewportInnerSize.width) != null ? _viewportInnerSize$wi : 0,\n      position: 'absolute',\n      top: headerHeight,\n      bottom: height === 'auto' ? 0 : undefined\n    }\n  }, props));\n}\n\nexport function GridOverlays() {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridVisibleRowCountSelector);\n  const showNoRowsOverlay = !rootProps.loading && totalRowCount === 0;\n  const showNoResultsOverlay = !rootProps.loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlay = null;\n\n  if (showNoRowsOverlay) {\n    var _rootProps$components;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoRowsOverlay, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.noRowsOverlay));\n  }\n\n  if (showNoResultsOverlay) {\n    var _rootProps$components2;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.NoResultsOverlay, _extends({}, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.noResultsOverlay));\n  }\n\n  if (rootProps.loading) {\n    var _rootProps$components3;\n\n    overlay = /*#__PURE__*/_jsx(rootProps.components.LoadingOverlay, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.loadingOverlay));\n  }\n\n  if (overlay === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, {\n    children: overlay\n  });\n}"]},"metadata":{},"sourceType":"module"}