{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport NoSsr from '@mui/material/NoSsr';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  var _rootProps$classes;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  apiRef.current.rootElementRef = rootContainerRef;\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsx(GridRootStyles, _extends({\n      ref: handleRef,\n      className: clsx(className, (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes.root, gridClasses.root, rootProps.autoHeight && gridClasses.autoHeight),\n      role: \"grid\",\n      \"aria-colcount\": visibleColumns.length,\n      \"aria-rowcount\": totalRowCount,\n      \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n      \"aria-label\": rootProps['aria-label'],\n      \"aria-labelledby\": rootProps['aria-labelledby']\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/components/containers/GridRoot.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useForkRef","NoSsr","GridRootStyles","gridVisibleColumnDefinitionsSelector","useGridSelector","useGridApiContext","useGridRootProps","gridClasses","gridRowCountSelector","jsx","_jsx","GridRoot","forwardRef","props","ref","_rootProps$classes","rootProps","children","className","other","apiRef","visibleColumns","totalRowCount","rootContainerRef","useRef","handleRef","current","rootElementRef","classes","root","autoHeight","role","length","disableMultipleSelection","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef } from '@mui/material/utils';\nimport NoSsr from '@mui/material/NoSsr';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridClasses } from '../../constants/gridClasses';\nimport { gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  var _rootProps$classes;\n\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  apiRef.current.rootElementRef = rootContainerRef;\n  return /*#__PURE__*/_jsx(NoSsr, {\n    children: /*#__PURE__*/_jsx(GridRootStyles, _extends({\n      ref: handleRef,\n      className: clsx(className, (_rootProps$classes = rootProps.classes) == null ? void 0 : _rootProps$classes.root, gridClasses.root, rootProps.autoHeight && gridClasses.autoHeight),\n      role: \"grid\",\n      \"aria-colcount\": visibleColumns.length,\n      \"aria-rowcount\": totalRowCount,\n      \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n      \"aria-label\": rootProps['aria-label'],\n      \"aria-labelledby\": rootProps['aria-labelledby']\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };"]},"metadata":{},"sourceType":"module"}