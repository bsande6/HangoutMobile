{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridEvents } from '../../../models/events';\nexport const useGridPreProcessing = apiRef => {\n  const preProcessorsRef = React.useRef({});\n  const registerPreProcessor = React.useCallback((group, id, callback) => {\n    if (!preProcessorsRef.current[group]) {\n      preProcessorsRef.current[group] = {};\n    }\n\n    const preProcessors = preProcessorsRef.current[group];\n    const oldCallback = preProcessors[id];\n\n    if (!oldCallback || oldCallback !== callback) {\n      preProcessorsRef.current[group] = _extends({}, preProcessors, {\n        [id]: callback\n      });\n      apiRef.current.publishEvent(GridEvents.preProcessorRegister, group);\n    }\n\n    return () => {\n      const _ref = preProcessorsRef.current[group],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [id].map(_toPropertyKey));\n\n      preProcessorsRef.current[group] = otherProcessors;\n      apiRef.current.publishEvent(GridEvents.preProcessorUnregister, group);\n    };\n  }, [apiRef]);\n  const applyPreProcessors = React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const [group, value, params] = args;\n\n    if (!preProcessorsRef.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Object.values(preProcessorsRef.current[group]);\n    return preProcessors.reduce((acc, preProcessor) => {\n      return preProcessor(acc, params);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPreProcessor: registerPreProcessor,\n    unstable_applyPreProcessors: applyPreProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPreProcessing');\n};","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/hooks/core/preProcessing/useGridPreProcessing.js"],"names":["_objectWithoutPropertiesLoose","_toPropertyKey","_extends","React","useGridApiMethod","GridEvents","useGridPreProcessing","apiRef","preProcessorsRef","useRef","registerPreProcessor","useCallback","group","id","callback","current","preProcessors","oldCallback","publishEvent","preProcessorRegister","_ref","otherProcessors","map","preProcessorUnregister","applyPreProcessors","args","value","params","Object","values","reduce","acc","preProcessor","preProcessingApi","unstable_registerPreProcessor","unstable_applyPreProcessors"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAO,MAAMC,oBAAoB,GAAGC,MAAM,IAAI;AAC5C,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,MAAN,CAAa,EAAb,CAAzB;AACA,QAAMC,oBAAoB,GAAGP,KAAK,CAACQ,WAAN,CAAkB,CAACC,KAAD,EAAQC,EAAR,EAAYC,QAAZ,KAAyB;AACtE,QAAI,CAACN,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,CAAL,EAAsC;AACpCJ,MAAAA,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,IAAkC,EAAlC;AACD;;AAED,UAAMI,aAAa,GAAGR,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,CAAtB;AACA,UAAMK,WAAW,GAAGD,aAAa,CAACH,EAAD,CAAjC;;AAEA,QAAI,CAACI,WAAD,IAAgBA,WAAW,KAAKH,QAApC,EAA8C;AAC5CN,MAAAA,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,IAAkCV,QAAQ,CAAC,EAAD,EAAKc,aAAL,EAAoB;AAC5D,SAACH,EAAD,GAAMC;AADsD,OAApB,CAA1C;AAGAP,MAAAA,MAAM,CAACQ,OAAP,CAAeG,YAAf,CAA4Bb,UAAU,CAACc,oBAAvC,EAA6DP,KAA7D;AACD;;AAED,WAAO,MAAM;AACX,YAAMQ,IAAI,GAAGZ,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,CAAb;AAAA,YACMS,eAAe,GAAGrB,6BAA6B,CAACoB,IAAD,EAAO,CAACP,EAAD,EAAKS,GAAL,CAASrB,cAAT,CAAP,CADrD;;AAGAO,MAAAA,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,IAAkCS,eAAlC;AACAd,MAAAA,MAAM,CAACQ,OAAP,CAAeG,YAAf,CAA4Bb,UAAU,CAACkB,sBAAvC,EAA+DX,KAA/D;AACD,KAND;AAOD,GAtB4B,EAsB1B,CAACL,MAAD,CAtB0B,CAA7B;AAuBA,QAAMiB,kBAAkB,GAAGrB,KAAK,CAACQ,WAAN,CAAkB,YAAa;AAAA,sCAATc,IAAS;AAATA,MAAAA,IAAS;AAAA;;AACxD,UAAM,CAACb,KAAD,EAAQc,KAAR,EAAeC,MAAf,IAAyBF,IAA/B;;AAEA,QAAI,CAACjB,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,CAAL,EAAsC;AACpC,aAAOc,KAAP;AACD;;AAED,UAAMV,aAAa,GAAGY,MAAM,CAACC,MAAP,CAAcrB,gBAAgB,CAACO,OAAjB,CAAyBH,KAAzB,CAAd,CAAtB;AACA,WAAOI,aAAa,CAACc,MAAd,CAAqB,CAACC,GAAD,EAAMC,YAAN,KAAuB;AACjD,aAAOA,YAAY,CAACD,GAAD,EAAMJ,MAAN,CAAnB;AACD,KAFM,EAEJD,KAFI,CAAP;AAGD,GAX0B,EAWxB,EAXwB,CAA3B;AAYA,QAAMO,gBAAgB,GAAG;AACvBC,IAAAA,6BAA6B,EAAExB,oBADR;AAEvByB,IAAAA,2BAA2B,EAAEX;AAFN,GAAzB;AAIApB,EAAAA,gBAAgB,CAACG,MAAD,EAAS0B,gBAAT,EAA2B,mBAA3B,CAAhB;AACD,CA1CM","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridEvents } from '../../../models/events';\nexport const useGridPreProcessing = apiRef => {\n  const preProcessorsRef = React.useRef({});\n  const registerPreProcessor = React.useCallback((group, id, callback) => {\n    if (!preProcessorsRef.current[group]) {\n      preProcessorsRef.current[group] = {};\n    }\n\n    const preProcessors = preProcessorsRef.current[group];\n    const oldCallback = preProcessors[id];\n\n    if (!oldCallback || oldCallback !== callback) {\n      preProcessorsRef.current[group] = _extends({}, preProcessors, {\n        [id]: callback\n      });\n      apiRef.current.publishEvent(GridEvents.preProcessorRegister, group);\n    }\n\n    return () => {\n      const _ref = preProcessorsRef.current[group],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [id].map(_toPropertyKey));\n\n      preProcessorsRef.current[group] = otherProcessors;\n      apiRef.current.publishEvent(GridEvents.preProcessorUnregister, group);\n    };\n  }, [apiRef]);\n  const applyPreProcessors = React.useCallback((...args) => {\n    const [group, value, params] = args;\n\n    if (!preProcessorsRef.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Object.values(preProcessorsRef.current[group]);\n    return preProcessors.reduce((acc, preProcessor) => {\n      return preProcessor(acc, params);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPreProcessor: registerPreProcessor,\n    unstable_applyPreProcessors: applyPreProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPreProcessing');\n};"]},"metadata":{},"sourceType":"module"}