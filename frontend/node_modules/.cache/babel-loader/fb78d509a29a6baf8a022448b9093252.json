{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})(() => ({\n  padding: '8px 0px 8px 8px'\n}));\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: '1px 8px 1px 7px',\n    [`& .${switchClasses.root}`]: {\n      marginRight: theme.spacing(0.5)\n    }\n  };\n});\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nexport function GridColumnsPanel() {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    // TODO v6: call `setColumnVisibilityModel` directly\n    apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return columns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return columns.filter(column => (column.headerName || column.field).toLowerCase().indexOf(searchValueToCheck) > -1);\n  }, [columns, searchValue]);\n  React.useEffect(() => {\n    searchInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                color: \"primary\",\n                size: \"small\"\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false),\n        color: \"primary\"\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true),\n        color: \"primary\"\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js"],"names":["_extends","React","unstable_composeClasses","composeClasses","IconButton","switchClasses","FormControlLabel","styled","gridColumnDefinitionsSelector","gridColumnVisibilityModelSelector","useGridSelector","useGridApiContext","GridDragIcon","GridPanelContent","GridPanelFooter","GridPanelHeader","GridPanelWrapper","GRID_EXPERIMENTAL_ENABLED","useGridRootProps","getDataGridUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","slots","root","columnsPanelRow","GridColumnsPanelRoot","name","slot","overridesResolver","props","styles","columnsPanel","padding","GridColumnsPanelRowRoot","theme","display","justifyContent","marginRight","spacing","GridIconButtonRoot","GridColumnsPanel","_rootProps$components","_rootProps$components3","_rootProps$components4","apiRef","searchInputRef","useRef","columns","columnVisibilityModel","rootProps","searchValue","setSearchValue","useState","toggleColumn","event","field","target","current","setColumnVisibility","toggleAllColumns","useCallback","isVisible","updateColumns","map","col","hideable","hide","handleSearchValueChange","value","currentColumns","useMemo","searchValueToCheck","toLowerCase","filter","column","headerName","indexOf","useEffect","focus","children","components","BaseTextField","label","getLocaleText","placeholder","inputRef","onChange","variant","fullWidth","componentsProps","baseTextField","className","_rootProps$components2","control","BaseSwitch","disabled","checked","onClick","color","size","baseSwitch","disableColumnReorder","draggable","title","BaseButton","baseButton"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { switchClasses } from '@mui/material/Switch';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridDragIcon } from '../icons';\nimport { GridPanelContent } from './GridPanelContent';\nimport { GridPanelFooter } from './GridPanelFooter';\nimport { GridPanelHeader } from './GridPanelHeader';\nimport { GridPanelWrapper } from './GridPanelWrapper';\nimport { GRID_EXPERIMENTAL_ENABLED } from '../../constants/envConstants';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsPanel'],\n    columnsPanelRow: ['columnsPanelRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridColumnsPanelRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanel',\n  overridesResolver: (props, styles) => styles.columnsPanel\n})(() => ({\n  padding: '8px 0px 8px 8px'\n}));\nconst GridColumnsPanelRowRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsPanelRow',\n  overridesResolver: (props, styles) => styles.columnsPanelRow\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: '1px 8px 1px 7px',\n  [`& .${switchClasses.root}`]: {\n    marginRight: theme.spacing(0.5)\n  }\n}));\nconst GridIconButtonRoot = styled(IconButton)({\n  justifyContent: 'flex-end'\n});\nexport function GridColumnsPanel() {\n  var _rootProps$components, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n\n  const toggleAllColumns = React.useCallback(isVisible => {\n    // TODO v6: call `setColumnVisibilityModel` directly\n    apiRef.current.updateColumns(columns.map(col => {\n      if (col.hideable !== false) {\n        return {\n          field: col.field,\n          hide: !isVisible\n        };\n      }\n\n      return col;\n    }));\n  }, [apiRef, columns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const currentColumns = React.useMemo(() => {\n    if (!searchValue) {\n      return columns;\n    }\n\n    const searchValueToCheck = searchValue.toLowerCase();\n    return columns.filter(column => (column.headerName || column.field).toLowerCase().indexOf(searchValueToCheck) > -1);\n  }, [columns, searchValue]);\n  React.useEffect(() => {\n    searchInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, {\n    children: [/*#__PURE__*/_jsx(GridPanelHeader, {\n      children: /*#__PURE__*/_jsx(rootProps.components.BaseTextField, _extends({\n        label: apiRef.current.getLocaleText('columnsPanelTextFieldLabel'),\n        placeholder: apiRef.current.getLocaleText('columnsPanelTextFieldPlaceholder'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"standard\",\n        fullWidth: true\n      }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseTextField))\n    }), /*#__PURE__*/_jsx(GridPanelContent, {\n      children: /*#__PURE__*/_jsx(GridColumnsPanelRoot, {\n        className: classes.root,\n        children: currentColumns.map(column => {\n          var _rootProps$components2;\n\n          return /*#__PURE__*/_jsxs(GridColumnsPanelRowRoot, {\n            className: classes.columnsPanelRow,\n            children: [/*#__PURE__*/_jsx(FormControlLabel, {\n              control: /*#__PURE__*/_jsx(rootProps.components.BaseSwitch, _extends({\n                disabled: column.hideable === false,\n                checked: columnVisibilityModel[column.field] !== false,\n                onClick: toggleColumn,\n                name: column.field,\n                color: \"primary\",\n                size: \"small\"\n              }, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.baseSwitch)),\n              label: column.headerName || column.field\n            }), !rootProps.disableColumnReorder && GRID_EXPERIMENTAL_ENABLED && /*#__PURE__*/_jsx(GridIconButtonRoot, {\n              draggable: true,\n              \"aria-label\": apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              title: apiRef.current.getLocaleText('columnsPanelDragIconLabel'),\n              size: \"small\",\n              disabled: true,\n              children: /*#__PURE__*/_jsx(GridDragIcon, {})\n            })]\n          }, column.field);\n        })\n      })\n    }), /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [/*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(false),\n        color: \"primary\"\n      }, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelHideAllButton')\n      })), /*#__PURE__*/_jsx(rootProps.components.BaseButton, _extends({\n        onClick: () => toggleAllColumns(true),\n        color: \"primary\"\n      }, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.baseButton, {\n        children: apiRef.current.getLocaleText('columnsPanelShowAllButton')\n      }))]\n    })]\n  });\n}"]},"metadata":{},"sourceType":"module"}