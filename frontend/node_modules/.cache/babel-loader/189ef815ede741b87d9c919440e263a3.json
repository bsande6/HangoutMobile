{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridEvents, GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\"; // Based on https://stackoverflow.com/a/59518678\n\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height\n  };\n  React.useLayoutEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test') {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.error([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, 'In the next render, the focus will be changed to match the state.', 'Call `fireEvent.mouseUp` and `fireEvent.click` before to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    style: style,\n    tabIndex: cellMode === 'view' || !isEditable ? tabIndex : -1,\n    onClick: publish(GridEvents.cellClick, onClick),\n    onDoubleClick: publish(GridEvents.cellDoubleClick, onDoubleClick),\n    onMouseDown: publish(GridEvents.cellMouseDown, onMouseDown),\n    onMouseUp: publishMouseUp(GridEvents.cellMouseUp),\n    onKeyDown: publish(GridEvents.cellKeyDown, onKeyDown),\n    onDragEnter: publish(GridEvents.cellDragEnter, onDragEnter),\n    onDragOver: publish(GridEvents.cellDragOver, onDragOver)\n  }, other, {\n    onFocus: handleFocus,\n    children: children != null ? children : /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      children: valueToRender == null ? void 0 : valueToRender.toString()\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  hasFocus: PropTypes.bool,\n  height: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/components/cell/GridCell.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","ownerDocument","capitalize","getDataGridUtilityClass","GridEvents","GridCellModes","useGridApiContext","useGridRootProps","gridFocusCellSelector","jsx","_jsx","cachedSupportsPreventScroll","doesSupportPreventScroll","undefined","document","createElement","focus","preventScroll","useUtilityClasses","ownerState","align","showRightBorder","isEditable","classes","slots","root","content","warnedOnce","GridCell","props","children","colIndex","cellMode","field","formattedValue","hasFocus","height","rowId","tabIndex","value","width","className","onClick","onDoubleClick","onMouseDown","onMouseUp","onKeyDown","onDragEnter","onDragOver","other","valueToRender","cellRef","useRef","apiRef","rootProps","publishMouseUp","useCallback","eventName","event","params","current","getCellParams","publishEvent","publish","propHandler","currentTarget","contains","target","getRow","style","minWidth","maxWidth","minHeight","maxHeight","useLayoutEffect","Edit","doc","rootElementRef","activeElement","focusableElement","querySelector","elementToFocus","scrollPosition","getScrollPosition","scroll","handleFocus","onFocus","process","env","NODE_ENV","focusedCell","id","console","error","join","ref","role","cellClick","cellDoubleClick","cellMouseDown","cellMouseUp","cellKeyDown","cellDragEnter","cellDragOver","toString","propTypes","oneOf","isRequired","node","string","number","oneOfType","instanceOf","Date","object","bool","func"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,MAAMC,SAAS,GAAG,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,UAAlC,EAA8C,OAA9C,EAAuD,gBAAvD,EAAyE,UAAzE,EAAqF,QAArF,EAA+F,YAA/F,EAA6G,OAA7G,EAAsH,UAAtH,EAAkI,OAAlI,EAA2I,OAA3I,EAAoJ,WAApJ,EAAiK,iBAAjK,EAAoL,oBAApL,EAA0M,KAA1M,EAAiN,SAAjN,EAA4N,eAA5N,EAA6O,aAA7O,EAA4P,WAA5P,EAAyQ,WAAzQ,EAAsR,aAAtR,EAAqS,YAArS,CAAlB;AAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,eAA1D;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,qBAA1C;AACA,SAASC,uBAAT,QAAwC,6BAAxC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,cAA1C;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,SAASC,gBAAT,QAAiC,oCAAjC;AACA,SAASC,qBAAT,QAAsC,mDAAtC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B,C,CACA;;AACA,IAAIC,2BAAJ;;AAEA,SAASC,wBAAT,GAAoC;AAClC,MAAID,2BAA2B,KAAKE,SAApC,EAA+C;AAC7CC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,KAAvB,EAA8BC,KAA9B,CAAoC;AAClC,UAAIC,aAAJ,GAAoB;AAClBN,QAAAA,2BAA2B,GAAG,IAA9B;AACA,eAAO,KAAP;AACD;;AAJiC,KAApC;AAOD;;AAED,SAAOA,2BAAP;AACD;;AAED,MAAMO,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA;AAJI,MAKFJ,UALJ;AAMA,QAAMK,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAU,aAAYvB,UAAU,CAACkB,KAAD,CAAQ,EAAxC,EAA2CE,UAAU,IAAI,gBAAzD,EAA2ED,eAAe,IAAI,YAA9F,CADM;AAEZK,IAAAA,OAAO,EAAE,CAAC,aAAD;AAFG,GAAd;AAIA,SAAO1B,cAAc,CAACwB,KAAD,EAAQrB,uBAAR,EAAiCoB,OAAjC,CAArB;AACD,CAZD;;AAcA,IAAII,UAAU,GAAG,KAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AACJT,IAAAA,KADI;AAEJU,IAAAA,QAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,KALI;AAMJC,IAAAA,cANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,MARI;AASJd,IAAAA,UATI;AAUJe,IAAAA,KAVI;AAWJC,IAAAA,QAXI;AAYJC,IAAAA,KAZI;AAaJC,IAAAA,KAbI;AAcJC,IAAAA,SAdI;AAeJpB,IAAAA,eAfI;AAgBJqB,IAAAA,OAhBI;AAiBJC,IAAAA,aAjBI;AAkBJC,IAAAA,WAlBI;AAmBJC,IAAAA,SAnBI;AAoBJC,IAAAA,SApBI;AAqBJC,IAAAA,WArBI;AAsBJC,IAAAA;AAtBI,MAuBFnB,KAvBJ;AAAA,QAwBMoB,KAAK,GAAGvD,6BAA6B,CAACmC,KAAD,EAAQlC,SAAR,CAxB3C;;AA0BA,QAAMuD,aAAa,GAAGhB,cAAc,IAAI,IAAlB,GAAyBK,KAAzB,GAAiCL,cAAvD;AACA,QAAMiB,OAAO,GAAGvD,KAAK,CAACwD,MAAN,CAAa,IAAb,CAAhB;AACA,QAAMC,MAAM,GAAG/C,iBAAiB,EAAhC;AACA,QAAMgD,SAAS,GAAG/C,gBAAgB,EAAlC;AACA,QAAMY,UAAU,GAAG;AACjBC,IAAAA,KADiB;AAEjBC,IAAAA,eAFiB;AAGjBC,IAAAA,UAHiB;AAIjBC,IAAAA,OAAO,EAAE+B,SAAS,CAAC/B;AAJF,GAAnB;AAMA,QAAMA,OAAO,GAAGL,iBAAiB,CAACC,UAAD,CAAjC;AACA,QAAMoC,cAAc,GAAG3D,KAAK,CAAC4D,WAAN,CAAkBC,SAAS,IAAIC,KAAK,IAAI;AAC7D,UAAMC,MAAM,GAAGN,MAAM,CAACO,OAAP,CAAeC,aAAf,CAA6BxB,KAA7B,EAAoCJ,KAAK,IAAI,EAA7C,CAAf;AACAoB,IAAAA,MAAM,CAACO,OAAP,CAAeE,YAAf,CAA4BL,SAA5B,EAAuCE,MAAvC,EAA+CD,KAA/C;;AAEA,QAAIb,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACa,KAAD,CAAT;AACD;AACF,GAPsB,EAOpB,CAACL,MAAD,EAASpB,KAAT,EAAgBY,SAAhB,EAA2BR,KAA3B,CAPoB,CAAvB;AAQA,QAAM0B,OAAO,GAAGnE,KAAK,CAAC4D,WAAN,CAAkB,CAACC,SAAD,EAAYO,WAAZ,KAA4BN,KAAK,IAAI;AACrE;AACA,QAAI,CAACA,KAAK,CAACO,aAAN,CAAoBC,QAApB,CAA6BR,KAAK,CAACS,MAAnC,CAAL,EAAiD;AAC/C;AACD,KAJoE,CAInE;;;AAGF,QAAI,CAACd,MAAM,CAACO,OAAP,CAAeQ,MAAf,CAAsB/B,KAAtB,CAAL,EAAmC;AACjC;AACD;;AAED,UAAMsB,MAAM,GAAGN,MAAM,CAACO,OAAP,CAAeC,aAAf,CAA6BxB,KAA7B,EAAoCJ,KAAK,IAAI,EAA7C,CAAf;AACAoB,IAAAA,MAAM,CAACO,OAAP,CAAeE,YAAf,CAA4BL,SAA5B,EAAuCE,MAAvC,EAA+CD,KAA/C;;AAEA,QAAIM,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACN,KAAD,CAAX;AACD;AACF,GAjBe,EAiBb,CAACL,MAAD,EAASpB,KAAT,EAAgBI,KAAhB,CAjBa,CAAhB;AAkBA,QAAMgC,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE9B,KADE;AAEZ+B,IAAAA,QAAQ,EAAE/B,KAFE;AAGZgC,IAAAA,SAAS,EAAEpC,MAHC;AAIZqC,IAAAA,SAAS,EAAErC;AAJC,GAAd;AAMAxC,EAAAA,KAAK,CAAC8E,eAAN,CAAsB,MAAM;AAC1B,QAAI,CAACvC,QAAD,IAAaH,QAAQ,KAAK3B,aAAa,CAACsE,IAA5C,EAAkD;AAChD;AACD;;AAED,UAAMC,GAAG,GAAG3E,aAAa,CAACoD,MAAM,CAACO,OAAP,CAAeiB,cAAf,CAA8BjB,OAA/B,CAAzB;;AAEA,QAAIT,OAAO,CAACS,OAAR,IAAmB,CAACT,OAAO,CAACS,OAAR,CAAgBM,QAAhB,CAAyBU,GAAG,CAACE,aAA7B,CAAxB,EAAqE;AACnE,YAAMC,gBAAgB,GAAG5B,OAAO,CAACS,OAAR,CAAgBoB,aAAhB,CAA8B,gBAA9B,CAAzB;AACA,YAAMC,cAAc,GAAGF,gBAAgB,IAAI5B,OAAO,CAACS,OAAnD;;AAEA,UAAIhD,wBAAwB,EAA5B,EAAgC;AAC9BqE,QAAAA,cAAc,CAACjE,KAAf,CAAqB;AACnBC,UAAAA,aAAa,EAAE;AADI,SAArB;AAGD,OAJD,MAIO;AACL,cAAMiE,cAAc,GAAG7B,MAAM,CAACO,OAAP,CAAeuB,iBAAf,EAAvB;AACAF,QAAAA,cAAc,CAACjE,KAAf;AACAqC,QAAAA,MAAM,CAACO,OAAP,CAAewB,MAAf,CAAsBF,cAAtB;AACD;AACF;AACF,GArBD,EAqBG,CAAC/C,QAAD,EAAWH,QAAX,EAAqBqB,MAArB,CArBH;AAsBA,MAAIgC,WAAW,GAAGpC,KAAK,CAACqC,OAAxB;;AAEA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA7B,EAAqC;AACnCJ,IAAAA,WAAW,GAAG3B,KAAK,IAAI;AACrB,YAAMgC,WAAW,GAAGlF,qBAAqB,CAAC6C,MAAD,CAAzC;;AAEA,UAAI,CAACqC,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACC,EAA5C,MAAoDtD,KAApD,IAA6DqD,WAAW,CAACzD,KAAZ,KAAsBA,KAAvF,EAA8F;AAC5F,YAAI,OAAOgB,KAAK,CAACqC,OAAb,KAAyB,UAA7B,EAAyC;AACvCrC,UAAAA,KAAK,CAACqC,OAAN,CAAc5B,KAAd;AACD;;AAED;AACD;;AAED,UAAI,CAAC/B,UAAL,EAAiB;AACfiE,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAE,yBAAwBxD,KAAM,cAAaJ,KAAM,kBAAnD,EAAuE,qDAAoDyD,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACC,EAAG,WAAUD,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,CAACzD,KAAM,GAApO,EAAwO,mEAAxO,EAA6S,yFAA7S,EAAwY6D,IAAxY,CAA6Y,IAA7Y,CAAd;AACAnE,QAAAA,UAAU,GAAG,IAAb;AACD;AACF,KAfD;AAgBD;;AAED,SAAO,aAAajB,IAAI,CAAC,KAAD,EAAQjB,QAAQ,CAAC;AACvCsG,IAAAA,GAAG,EAAE5C,OADkC;AAEvCV,IAAAA,SAAS,EAAE3C,IAAI,CAAC2C,SAAD,EAAYlB,OAAO,CAACE,IAApB,CAFwB;AAGvCuE,IAAAA,IAAI,EAAE,MAHiC;AAIvC,kBAAc/D,KAJyB;AAKvC,qBAAiBF,QALsB;AAMvC,qBAAiBA,QAAQ,GAAG,CANW;AAOvCsC,IAAAA,KAAK,EAAEA,KAPgC;AAQvC/B,IAAAA,QAAQ,EAAEN,QAAQ,KAAK,MAAb,IAAuB,CAACV,UAAxB,GAAqCgB,QAArC,GAAgD,CAAC,CARpB;AASvCI,IAAAA,OAAO,EAAEqB,OAAO,CAAC3D,UAAU,CAAC6F,SAAZ,EAAuBvD,OAAvB,CATuB;AAUvCC,IAAAA,aAAa,EAAEoB,OAAO,CAAC3D,UAAU,CAAC8F,eAAZ,EAA6BvD,aAA7B,CAViB;AAWvCC,IAAAA,WAAW,EAAEmB,OAAO,CAAC3D,UAAU,CAAC+F,aAAZ,EAA2BvD,WAA3B,CAXmB;AAYvCC,IAAAA,SAAS,EAAEU,cAAc,CAACnD,UAAU,CAACgG,WAAZ,CAZc;AAavCtD,IAAAA,SAAS,EAAEiB,OAAO,CAAC3D,UAAU,CAACiG,WAAZ,EAAyBvD,SAAzB,CAbqB;AAcvCC,IAAAA,WAAW,EAAEgB,OAAO,CAAC3D,UAAU,CAACkG,aAAZ,EAA2BvD,WAA3B,CAdmB;AAevCC,IAAAA,UAAU,EAAEe,OAAO,CAAC3D,UAAU,CAACmG,YAAZ,EAA0BvD,UAA1B;AAfoB,GAAD,EAgBrCC,KAhBqC,EAgB9B;AACRqC,IAAAA,OAAO,EAAED,WADD;AAERvD,IAAAA,QAAQ,EAAEA,QAAQ,IAAI,IAAZ,GAAmBA,QAAnB,GAA8B,aAAapB,IAAI,CAAC,KAAD,EAAQ;AAC/D+B,MAAAA,SAAS,EAAElB,OAAO,CAACG,OAD4C;AAE/DI,MAAAA,QAAQ,EAAEoB,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACsD,QAAd;AAFoB,KAAR;AAFjD,GAhB8B,CAAhB,CAAxB;AAuBD;;AAEDjB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC7D,QAAQ,CAAC6E,SAAT,GAAqB;AAC3D;AACA;AACA;AACA;AACArF,EAAAA,KAAK,EAAEvB,SAAS,CAAC6G,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,CAAhB,EAA6CC,UALO;AAM3D3E,EAAAA,QAAQ,EAAEnC,SAAS,CAAC6G,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,CAAhB,CANiD;AAO3D5E,EAAAA,QAAQ,EAAEjC,SAAS,CAAC+G,IAPuC;AAQ3DnE,EAAAA,SAAS,EAAE5C,SAAS,CAACgH,MARsC;AAS3D9E,EAAAA,QAAQ,EAAElC,SAAS,CAACiH,MAAV,CAAiBH,UATgC;AAU3D1E,EAAAA,KAAK,EAAEpC,SAAS,CAACgH,MAAV,CAAiBF,UAVmC;AAW3DzE,EAAAA,cAAc,EAAErC,SAAS,CAACkH,SAAV,CAAoB,CAAClH,SAAS,CAACmH,UAAV,CAAqBC,IAArB,CAAD,EAA6BpH,SAAS,CAACiH,MAAvC,EAA+CjH,SAAS,CAACqH,MAAzD,EAAiErH,SAAS,CAACgH,MAA3E,EAAmFhH,SAAS,CAACsH,IAA7F,CAApB,CAX2C;AAY3DhF,EAAAA,QAAQ,EAAEtC,SAAS,CAACsH,IAZuC;AAa3D/E,EAAAA,MAAM,EAAEvC,SAAS,CAACiH,MAAV,CAAiBH,UAbkC;AAc3DrF,EAAAA,UAAU,EAAEzB,SAAS,CAACsH,IAdqC;AAe3DzE,EAAAA,OAAO,EAAE7C,SAAS,CAACuH,IAfwC;AAgB3DzE,EAAAA,aAAa,EAAE9C,SAAS,CAACuH,IAhBkC;AAiB3DrE,EAAAA,WAAW,EAAElD,SAAS,CAACuH,IAjBoC;AAkB3DpE,EAAAA,UAAU,EAAEnD,SAAS,CAACuH,IAlBqC;AAmB3DtE,EAAAA,SAAS,EAAEjD,SAAS,CAACuH,IAnBsC;AAoB3DxE,EAAAA,WAAW,EAAE/C,SAAS,CAACuH,IApBoC;AAqB3DvE,EAAAA,SAAS,EAAEhD,SAAS,CAACuH,IArBsC;AAsB3D/E,EAAAA,KAAK,EAAExC,SAAS,CAACkH,SAAV,CAAoB,CAAClH,SAAS,CAACiH,MAAX,EAAmBjH,SAAS,CAACgH,MAA7B,CAApB,EAA0DF,UAtBN;AAuB3DtF,EAAAA,eAAe,EAAExB,SAAS,CAACsH,IAvBgC;AAwB3D7E,EAAAA,QAAQ,EAAEzC,SAAS,CAAC6G,KAAV,CAAgB,CAAC,CAAC,CAAF,EAAK,CAAL,CAAhB,EAAyBC,UAxBwB;AAyB3DpE,EAAAA,KAAK,EAAE1C,SAAS,CAACkH,SAAV,CAAoB,CAAClH,SAAS,CAACmH,UAAV,CAAqBC,IAArB,CAAD,EAA6BpH,SAAS,CAACiH,MAAvC,EAA+CjH,SAAS,CAACqH,MAAzD,EAAiErH,SAAS,CAACgH,MAA3E,EAAmFhH,SAAS,CAACsH,IAA7F,CAApB,CAzBoD;AA0B3D3E,EAAAA,KAAK,EAAE3C,SAAS,CAACiH,MAAV,CAAiBH;AA1BmC,CAA7D,GA2BI,KAAK,CA3BT;AA4BA,SAAS/E,QAAT","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"align\", \"children\", \"colIndex\", \"cellMode\", \"field\", \"formattedValue\", \"hasFocus\", \"height\", \"isEditable\", \"rowId\", \"tabIndex\", \"value\", \"width\", \"className\", \"showRightBorder\", \"extendRowFullWidth\", \"row\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onKeyDown\", \"onDragEnter\", \"onDragOver\"];\n\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { ownerDocument, capitalize } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { GridEvents, GridCellModes } from '../../models';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { gridFocusCellSelector } from '../../hooks/features/focus/gridFocusStateSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\n\nfunction doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n\n    });\n  }\n\n  return cachedSupportsPreventScroll;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showRightBorder,\n    isEditable,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isEditable && 'cell--editable', showRightBorder && 'withBorder'],\n    content: ['cellContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nlet warnedOnce = false;\n\nfunction GridCell(props) {\n  const {\n    align,\n    children,\n    colIndex,\n    cellMode,\n    field,\n    formattedValue,\n    hasFocus,\n    height,\n    isEditable,\n    rowId,\n    tabIndex,\n    value,\n    width,\n    className,\n    showRightBorder,\n    onClick,\n    onDoubleClick,\n    onMouseDown,\n    onMouseUp,\n    onKeyDown,\n    onDragEnter,\n    onDragOver\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const valueToRender = formattedValue == null ? value : formattedValue;\n  const cellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    align,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (!event.currentTarget.contains(event.target)) {\n      return;\n    } // The row might have been deleted during the click\n\n\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const style = {\n    minWidth: width,\n    maxWidth: width,\n    minHeight: height,\n    maxHeight: height\n  };\n  React.useLayoutEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || cellRef.current;\n\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  let handleFocus = other.onFocus;\n\n  if (process.env.NODE_ENV === 'test') {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n\n      if ((focusedCell == null ? void 0 : focusedCell.id) === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n\n        return;\n      }\n\n      if (!warnedOnce) {\n        console.error([`MUI: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell == null ? void 0 : focusedCell.id}, field=${focusedCell == null ? void 0 : focusedCell.field}.`, 'In the next render, the focus will be changed to match the state.', 'Call `fireEvent.mouseUp` and `fireEvent.click` before to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: cellRef,\n    className: clsx(className, classes.root),\n    role: \"cell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    style: style,\n    tabIndex: cellMode === 'view' || !isEditable ? tabIndex : -1,\n    onClick: publish(GridEvents.cellClick, onClick),\n    onDoubleClick: publish(GridEvents.cellDoubleClick, onDoubleClick),\n    onMouseDown: publish(GridEvents.cellMouseDown, onMouseDown),\n    onMouseUp: publishMouseUp(GridEvents.cellMouseUp),\n    onKeyDown: publish(GridEvents.cellKeyDown, onKeyDown),\n    onDragEnter: publish(GridEvents.cellDragEnter, onDragEnter),\n    onDragOver: publish(GridEvents.cellDragOver, onDragOver)\n  }, other, {\n    onFocus: handleFocus,\n    children: children != null ? children : /*#__PURE__*/_jsx(\"div\", {\n      className: classes.content,\n      children: valueToRender == null ? void 0 : valueToRender.toString()\n    })\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  cellMode: PropTypes.oneOf(['edit', 'view']),\n  children: PropTypes.node,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  field: PropTypes.string.isRequired,\n  formattedValue: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  hasFocus: PropTypes.bool,\n  height: PropTypes.number.isRequired,\n  isEditable: PropTypes.bool,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  showRightBorder: PropTypes.bool,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  value: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  width: PropTypes.number.isRequired\n} : void 0;\nexport { GridCell };"]},"metadata":{},"sourceType":"module"}