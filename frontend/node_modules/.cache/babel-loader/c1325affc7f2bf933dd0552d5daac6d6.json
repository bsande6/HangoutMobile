{"ast":null,"code":"export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace';\nconst printableCharRegex = /^(\\p{L}|\\p{M}\\p{L}|\\p{M}|\\p{N}|\\p{Z}|\\p{S}|\\p{P})$/iu;\nexport const isPrintableKey = key => printableCharRegex.test(key);\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = key => isEnterKey(key) || isDeleteKeys(key) || isPrintableKey(key);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/utils/keyboardUtils.js"],"names":["isEscapeKey","key","isEnterKey","isTabKey","isSpaceKey","isArrowKeys","indexOf","isHomeOrEndKeys","isPageKeys","isDeleteKeys","printableCharRegex","isPrintableKey","test","GRID_MULTIPLE_SELECTION_KEYS","GRID_CELL_EXIT_EDIT_MODE_KEYS","GRID_CELL_EDIT_COMMIT_KEYS","isMultipleKey","isCellEnterEditModeKeys","isCellExitEditModeKeys","isCellEditCommitKeys","isNavigationKey","isKeyboardEvent","event","isHideMenuKey"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAGC,GAAG,IAAIA,GAAG,KAAK,QAAnC,C,CAA6C;;AAEpD,OAAO,MAAMC,UAAU,GAAGD,GAAG,IAAIA,GAAG,KAAK,OAAlC,C,CAA2C;;AAElD,OAAO,MAAME,QAAQ,GAAGF,GAAG,IAAIA,GAAG,KAAK,KAAhC,C,CAAuC;;AAE9C,OAAO,MAAMG,UAAU,GAAGH,GAAG,IAAIA,GAAG,KAAK,GAAlC;AACP,OAAO,MAAMI,WAAW,GAAGJ,GAAG,IAAIA,GAAG,CAACK,OAAJ,CAAY,OAAZ,MAAyB,CAApD;AACP,OAAO,MAAMC,eAAe,GAAGN,GAAG,IAAIA,GAAG,KAAK,MAAR,IAAkBA,GAAG,KAAK,KAAzD;AACP,OAAO,MAAMO,UAAU,GAAGP,GAAG,IAAIA,GAAG,CAACK,OAAJ,CAAY,MAAZ,MAAwB,CAAlD;AACP,OAAO,MAAMG,YAAY,GAAGR,GAAG,IAAIA,GAAG,KAAK,QAAR,IAAoBA,GAAG,KAAK,WAAxD;AACP,MAAMS,kBAAkB,GAAG,sDAA3B;AACA,OAAO,MAAMC,cAAc,GAAGV,GAAG,IAAIS,kBAAkB,CAACE,IAAnB,CAAwBX,GAAxB,CAA9B;AACP,OAAO,MAAMY,4BAA4B,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,CAArC;AACP,OAAO,MAAMC,6BAA6B,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,KAApB,CAAtC;AACP,OAAO,MAAMC,0BAA0B,GAAG,CAAC,OAAD,EAAU,KAAV,CAAnC;AACP,OAAO,MAAMC,aAAa,GAAGf,GAAG,IAAIY,4BAA4B,CAACP,OAA7B,CAAqCL,GAArC,IAA4C,CAAC,CAA1E;AACP,OAAO,MAAMgB,uBAAuB,GAAGhB,GAAG,IAAIC,UAAU,CAACD,GAAD,CAAV,IAAmBQ,YAAY,CAACR,GAAD,CAA/B,IAAwCU,cAAc,CAACV,GAAD,CAA7F;AACP,OAAO,MAAMiB,sBAAsB,GAAGjB,GAAG,IAAIa,6BAA6B,CAACR,OAA9B,CAAsCL,GAAtC,IAA6C,CAAC,CAApF;AACP,OAAO,MAAMkB,oBAAoB,GAAGlB,GAAG,IAAIc,0BAA0B,CAACT,OAA3B,CAAmCL,GAAnC,IAA0C,CAAC,CAA/E;AACP,OAAO,MAAMmB,eAAe,GAAGnB,GAAG,IAAIM,eAAe,CAACN,GAAD,CAAf,IAAwBI,WAAW,CAACJ,GAAD,CAAnC,IAA4CO,UAAU,CAACP,GAAD,CAAtD,IAA+DG,UAAU,CAACH,GAAD,CAAxG;AACP,OAAO,MAAMoB,eAAe,GAAGC,KAAK,IAAI,CAAC,CAACA,KAAK,CAACrB,GAAzC;AACP,OAAO,MAAMsB,aAAa,GAAGtB,GAAG,IAAIE,QAAQ,CAACF,GAAD,CAAR,IAAiBD,WAAW,CAACC,GAAD,CAAzD","sourcesContent":["export const isEscapeKey = key => key === 'Escape'; // TODO remove\n\nexport const isEnterKey = key => key === 'Enter'; // TODO remove\n\nexport const isTabKey = key => key === 'Tab'; // TODO remove\n\nexport const isSpaceKey = key => key === ' ';\nexport const isArrowKeys = key => key.indexOf('Arrow') === 0;\nexport const isHomeOrEndKeys = key => key === 'Home' || key === 'End';\nexport const isPageKeys = key => key.indexOf('Page') === 0;\nexport const isDeleteKeys = key => key === 'Delete' || key === 'Backspace';\nconst printableCharRegex = /^(\\p{L}|\\p{M}\\p{L}|\\p{M}|\\p{N}|\\p{Z}|\\p{S}|\\p{P})$/iu;\nexport const isPrintableKey = key => printableCharRegex.test(key);\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = key => isEnterKey(key) || isDeleteKeys(key) || isPrintableKey(key);\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => isHomeOrEndKeys(key) || isArrowKeys(key) || isPageKeys(key) || isSpaceKey(key);\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => isTabKey(key) || isEscapeKey(key);"]},"metadata":{},"sourceType":"module"}