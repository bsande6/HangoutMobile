{"ast":null,"code":"import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n'use strict';\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/lib/lodash/_baseIsEqualDeep.js"],"names":["Stack","equalArrays","equalByTag","equalObjects","getTag","isArray","isBuffer","isTypedArray","COMPARE_PARTIAL_FLAG","argsTag","arrayTag","objectTag","objectProto","Object","prototype","hasOwnProperty","baseIsEqualDeep","object","other","bitmask","customizer","equalFunc","stack","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","call","othIsWrapped","objUnwrapped","value","othUnwrapped"],"mappings":"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","sourcesContent":["import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n'use strict';\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;"]},"metadata":{},"sourceType":"module"}