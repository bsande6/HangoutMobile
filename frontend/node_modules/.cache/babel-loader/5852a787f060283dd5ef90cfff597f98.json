{"ast":null,"code":"import { localStorageAvailable } from '../utils/utils'; // A guide to feature toggling.\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nlet experimentalEnabled = false;\n\nif (typeof process !== 'undefined' && process.env.GRID_EXPERIMENTAL_ENABLED !== undefined && localStorageAvailable() && window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED')) {\n  experimentalEnabled = window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED') === 'true';\n} else if (typeof process !== 'undefined') {\n  experimentalEnabled = process.env.GRID_EXPERIMENTAL_ENABLED === 'true';\n}\n\nexport const GRID_EXPERIMENTAL_ENABLED = experimentalEnabled;","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/constants/envConstants.js"],"names":["localStorageAvailable","experimentalEnabled","process","env","GRID_EXPERIMENTAL_ENABLED","undefined","window","localStorage","getItem"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,gBAAtC,C,CAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,KAA1B;;AAEA,IAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAAR,CAAYC,yBAAZ,KAA0CC,SAA5E,IAAyFL,qBAAqB,EAA9G,IAAoHM,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,2BAA5B,CAAxH,EAAkL;AAChLP,EAAAA,mBAAmB,GAAGK,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,2BAA5B,MAA6D,MAAnF;AACD,CAFD,MAEO,IAAI,OAAON,OAAP,KAAmB,WAAvB,EAAoC;AACzCD,EAAAA,mBAAmB,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAZ,KAA0C,MAAhE;AACD;;AAED,OAAO,MAAMA,yBAAyB,GAAGH,mBAAlC","sourcesContent":["import { localStorageAvailable } from '../utils/utils'; // A guide to feature toggling.\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nlet experimentalEnabled = false;\n\nif (typeof process !== 'undefined' && process.env.GRID_EXPERIMENTAL_ENABLED !== undefined && localStorageAvailable() && window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED')) {\n  experimentalEnabled = window.localStorage.getItem('GRID_EXPERIMENTAL_ENABLED') === 'true';\n} else if (typeof process !== 'undefined') {\n  experimentalEnabled = process.env.GRID_EXPERIMENTAL_ENABLED === 'true';\n}\n\nexport const GRID_EXPERIMENTAL_ENABLED = experimentalEnabled;"]},"metadata":{},"sourceType":"module"}