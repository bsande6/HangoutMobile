{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"error\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport function GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    api,\n    field,\n    className,\n    hasFocus\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(event => {\n    const newValue = event.target.checked;\n    setValueState(newValue);\n    api.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [api, field, idProp]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","clsx","unstable_composeClasses","composeClasses","unstable_useId","useId","unstable_useEnhancedEffect","useEnhancedEffect","getDataGridUtilityClass","useGridRootProps","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","GridEditBooleanCell","props","_rootProps$components","id","idProp","value","api","field","className","hasFocus","other","inputRef","useRef","valueState","setValueState","useState","rootProps","handleChange","useCallback","event","newValue","target","checked","setEditCellValue","useEffect","current","focus","htmlFor","children","components","BaseCheckbox","Boolean","onChange","size","componentsProps","baseCheckbox","renderEditBooleanCell","params"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"getValue\", \"hasFocus\", \"isValidating\", \"error\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/material/utils';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nexport function GridEditBooleanCell(props) {\n  var _rootProps$components;\n\n  const {\n    id: idProp,\n    value,\n    api,\n    field,\n    className,\n    hasFocus\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(event => {\n    const newValue = event.target.checked;\n    setValueState(newValue);\n    api.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [api, field, idProp]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.components.BaseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.baseCheckbox))\n  }));\n}\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));"]},"metadata":{},"sourceType":"module"}