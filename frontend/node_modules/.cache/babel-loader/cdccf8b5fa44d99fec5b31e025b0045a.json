{"ast":null,"code":"var _jsxFileName = \"/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/src/components/homepage/friends.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Stack, Typography, Box, Button } from '@mui/material';\nimport MainAppBar from './mainmenu'; // fetch('http://localhost:8000/get_friends_list')\n//         .then(response => response.json())\n//         .then(data => setTotalReactPackages(data.total));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Friends = props => {\n  _s();\n\n  const columns = [{\n    field: 'id',\n    headerName: '#',\n    width: 130\n  }, {\n    field: 'first',\n    headerName: 'First Name',\n    width: 130\n  }, {\n    field: 'last',\n    headerName: 'Last Name',\n    width: 130\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 130\n  }, {\n    field: 'dateSince',\n    headerName: 'Friends Since',\n    type: 'date',\n    width: 130\n  }, {\n    field: \"Profile\",\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"Remove Friend\",\n    renderCell: cellValues => {\n      return /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    }\n  }]; // const [state, setState] = useState({friends:\"\"});\n\n  const [state, setState] = useState({});\n\n  async function friends() {\n    const friends = await fetch('http://localhost:8000/get_friends_list').then(response => response.json()).then(response => {\n      setState(response);\n    });\n  } // .then(response => {setState({response})});\n  // friends()\n  // console.log(response)\n\n\n  console.log(state[0]);\n  const rows = [];\n\n  for (var i = 0; i < state.length; i++) {\n    state[i].fields.id = i;\n    rows.push(state[i].fields);\n  } // const rows = [\n  //   { id: 1, first: state[0].firstname, last: 'Biden', status: 'available', dateSince: '6/15/21'},\n  //   { id: 2, first: 'Kamala', last: 'Harris', status: 'busy', dateSince: '4/6/20'},\n  // ];\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      alignItems: \"center\",\n      sx: {\n        padding: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      variant: \"h2\",\n      sx: {\n        fontWeight: 500\n      },\n      children: \"My Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"column\",\n      alignItems: \"center\",\n      sx: {\n        padding: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 5,\n      rowsPerPageOptions: [5],\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Friends, \"wc4FVGFDk/CrMM/4WhalkcDyeN4=\");\n\n_c = Friends;\nexport default Friends;\n\nvar _c;\n\n$RefreshReg$(_c, \"Friends\");","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/src/components/homepage/friends.js"],"names":["React","useState","DataGrid","Stack","Typography","Box","Button","MainAppBar","Friends","props","columns","field","headerName","width","type","renderCell","cellValues","state","setState","friends","fetch","then","response","json","console","log","rows","i","length","fields","id","push","height","padding","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState }  from 'react'\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nimport {Stack, Typography, Box, Button} from '@mui/material'\r\nimport MainAppBar from './mainmenu';\r\n\r\n// fetch('http://localhost:8000/get_friends_list')\r\n//         .then(response => response.json())\r\n//         .then(data => setTotalReactPackages(data.total));\r\n\r\nconst Friends = (props) => {\r\n  const columns = [\r\n    { field: 'id', headerName: '#', width: 130},\r\n    { field: 'first', headerName: 'First Name', width: 130},\r\n    { field: 'last', headerName: 'Last Name', width: 130},\r\n    { field: 'status', headerName: 'Status', width: 130 },\r\n    { field: 'dateSince', headerName: 'Friends Since', type: 'date', width: 130 },\r\n    {\r\n      field: \"Profile\",\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            View\r\n          </Button>\r\n        );\r\n      }\r\n    },\r\n    {\r\n      field: \"Remove Friend\",\r\n      renderCell: (cellValues) => {\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n          >\r\n            Remove\r\n          </Button>\r\n        );\r\n      }\r\n    }\r\n  ];\r\n\r\n  \r\n  // const [state, setState] = useState({friends:\"\"});\r\n  const [state, setState] = useState({})\r\n  async function friends() {\r\n    const friends = await fetch('http://localhost:8000/get_friends_list')\r\n      .then(response => response.json())\r\n      .then(response => {setState(response)})\r\n  }\r\n    \r\n    // .then(response => {setState({response})});\r\n  // friends()\r\n  // console.log(response)\r\n  console.log(state[0])\r\n  const rows = []\r\n  for (var i =0; i < state.length; i++) {\r\n    state[i].fields.id = i\r\n    rows.push(state[i].fields)\r\n  }\r\n\r\n  \r\n  // const rows = [\r\n  //   { id: 1, first: state[0].firstname, last: 'Biden', status: 'available', dateSince: '6/15/21'},\r\n  //   { id: 2, first: 'Kamala', last: 'Harris', status: 'busy', dateSince: '4/6/20'},\r\n  // ];\r\n\r\n  return (\r\n    \r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <MainAppBar/>\r\n        <Stack direction=\"column\" alignItems=\"center\" sx={{padding : 2}}></Stack>\r\n        <Typography align='center' variant=\"h2\" sx={{ fontWeight: 500 }}>\r\n         My Friends\r\n         </Typography>\r\n         <Stack direction=\"column\" alignItems=\"center\" sx={{padding : 2}}></Stack>\r\n       <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={5}\r\n          rowsPerPageOptions={[5]}\r\n          checkboxSelection\r\n        />\r\n        \r\n    </div>\r\n);\r\n};\r\nexport default Friends;"]},"metadata":{},"sourceType":"module"}