{"ast":null,"code":"// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor() {\n    this.timeouts = new Map();\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, CLEANUP_TIMER_LOOP_MILLIS);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/kenleyshaw 1/Desktop/school/visual studio/HangoutApp/frontend/node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js"],"names":["CLEANUP_TIMER_LOOP_MILLIS","TimerBasedCleanupTracking","constructor","timeouts","Map","register","object","unsubscribe","unregisterToken","timeout","setTimeout","delete","cleanupToken","set","unregister","get","clearTimeout","reset","forEach","value","key","undefined"],"mappings":"AAAA;AACA,MAAMA,yBAAyB,GAAG,IAAlC;AACA,OAAO,MAAMC,yBAAN,CAAgC;AACrCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACD;;AAEDC,EAAAA,QAAQ,CAACC,MAAD,EAASC,WAAT,EAAsBC,eAAtB,EAAuC;AAC7C,QAAI,CAAC,KAAKL,QAAV,EAAoB;AAClB,WAAKA,QAAL,GAAgB,IAAIC,GAAJ,EAAhB;AACD;;AAED,UAAMK,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/B,UAAI,OAAOH,WAAP,KAAuB,UAA3B,EAAuC;AACrCA,QAAAA,WAAW;AACZ;;AAED,WAAKJ,QAAL,CAAcQ,MAAd,CAAqBH,eAAe,CAACI,YAArC;AACD,KANyB,EAMvBZ,yBANuB,CAA1B;AAOA,SAAKG,QAAL,CAAcU,GAAd,CAAkBL,eAAe,CAACI,YAAlC,EAAgDH,OAAhD;AACD;;AAEDK,EAAAA,UAAU,CAACN,eAAD,EAAkB;AAC1B,UAAMC,OAAO,GAAG,KAAKN,QAAL,CAAcY,GAAd,CAAkBP,eAAe,CAACI,YAAlC,CAAhB;;AAEA,QAAIH,OAAJ,EAAa;AACX,WAAKN,QAAL,CAAcQ,MAAd,CAAqBH,eAAe,CAACI,YAArC;AACAI,MAAAA,YAAY,CAACP,OAAD,CAAZ;AACD;AACF;;AAEDQ,EAAAA,KAAK,GAAG;AACN,QAAI,KAAKd,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAce,OAAd,CAAsB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACpC,aAAKN,UAAL,CAAgB;AACdF,UAAAA,YAAY,EAAEQ;AADA,SAAhB;AAGD,OAJD;AAKA,WAAKjB,QAAL,GAAgBkB,SAAhB;AACD;AACF;;AAtCoC","sourcesContent":["// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor() {\n    this.timeouts = new Map();\n  }\n\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, CLEANUP_TIMER_LOOP_MILLIS);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}