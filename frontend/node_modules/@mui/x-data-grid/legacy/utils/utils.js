import _typeof from "@babel/runtime/helpers/esm/typeof";
import isDeepEqual from '../lib/lodash/isDeepEqual';
export { isDeepEqual };
export function isNumber(value) {
  return typeof value === 'number';
}
export function isFunction(value) {
  return typeof value === 'function';
}
export function isObject(value) {
  return _typeof(value) === 'object';
}
export function localStorageAvailable() {
  try {
    // Incognito mode might reject access to the localStorage for security reasons.
    // window isn't defined on Node.js
    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available
    var key = '__some_random_key_you_are_not_going_to_use__';
    window.localStorage.setItem(key, key);
    window.localStorage.removeItem(key);
    return true;
  } catch (err) {
    return false;
  }
}
export function escapeRegExp(value) {
  return value.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&');
}
/**
 * Follows the CSS specification behavior for min and max
 * If min > max, then the min have priority
 */

export var clamp = function clamp(value, min, max) {
  return Math.max(min, Math.min(max, value));
};