import type { GridRowId } from '../../../models';
import { GridColDef, GridStateColDef } from '../../../models/colDef/gridColDef';
export declare type GridColumnLookup = {
    [field: string]: GridStateColDef;
};
export declare type GridColumnRawLookup = {
    [field: string]: GridColDef | GridStateColDef;
};
export interface GridColumnsState {
    /**
     * TODO v6: Rename `orderedFields`.
     */
    all: string[];
    lookup: GridColumnLookup;
    columnVisibilityModel: GridColumnVisibilityModel;
}
export interface GridColumnsInitialState {
    columnVisibilityModel?: GridColumnVisibilityModel;
}
export declare type GridColumnsRawState = Omit<GridColumnsState, 'lookup'> & {
    lookup: GridColumnRawLookup;
};
export declare type GridColumnVisibilityModel = Record<GridRowId, boolean>;
